// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mikan.DAL;

namespace Mikan.DAL.Migrations
{
    [DbContext(typeof(AgricultureContext))]
    [Migration("20200525203606_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Mikan.DAL.Models.AgricultureAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Action");
                });

            modelBuilder.Entity("Mikan.DAL.Models.MainResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("YearFrom")
                        .HasColumnType("int");

                    b.Property<string>("kpNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("yearTo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MainResource");
                });

            modelBuilder.Entity("Mikan.DAL.Models.MechanicalResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("initialValue")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MechanicalResource");
                });

            modelBuilder.Entity("Mikan.DAL.Models.MechanicalResourceByYear", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MechanicalResourceId")
                        .HasColumnType("int");

                    b.Property<int>("amortization")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.Property<int>("year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MechanicalResourceId");

                    b.ToTable("MechanicalResourceByYear");
                });

            modelBuilder.Entity("Mikan.DAL.Models.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MainResourceId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResourceSubTypeId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MainResourceId");

                    b.HasIndex("ResourceSubTypeId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("Mikan.DAL.Models.ResourceAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Expenses")
                        .HasColumnType("int");

                    b.Property<int>("Produced")
                        .HasColumnType("int");

                    b.Property<int?>("ResourceId")
                        .HasColumnType("int");

                    b.Property<int>("Revenue")
                        .HasColumnType("int");

                    b.Property<int>("Sold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ResourceId");

                    b.ToTable("ResourceAction");
                });

            modelBuilder.Entity("Mikan.DAL.Models.ResourceSubType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceSubType");
                });

            modelBuilder.Entity("Mikan.DAL.Models.MechanicalResourceByYear", b =>
                {
                    b.HasOne("Mikan.DAL.Models.MechanicalResource", "MechanicalResource")
                        .WithMany()
                        .HasForeignKey("MechanicalResourceId");
                });

            modelBuilder.Entity("Mikan.DAL.Models.Resource", b =>
                {
                    b.HasOne("Mikan.DAL.Models.MainResource", "MainResource")
                        .WithMany()
                        .HasForeignKey("MainResourceId");

                    b.HasOne("Mikan.DAL.Models.ResourceSubType", "ResourceSubType")
                        .WithMany()
                        .HasForeignKey("ResourceSubTypeId");
                });

            modelBuilder.Entity("Mikan.DAL.Models.ResourceAction", b =>
                {
                    b.HasOne("Mikan.DAL.Models.Resource", "Resource")
                        .WithMany()
                        .HasForeignKey("ResourceId");
                });
#pragma warning restore 612, 618
        }
    }
}
